extends layout

block content
  h1= title
  h2 The purpose of this little application is to provide operations that are required to build the Gemini API.
  p This application is made up of 4 operations:
  ul#operations
    li
      a(href="lister") Lister
      #listdesc
        p The purpose of this module is to determine all the endpoint URLs and associated methods that are defined as part of the Gemini project.
        p The way the module works is that the code traverses all the directories in swagger directory, which is defined in code.
        p The swagger directory contains directories that contain JSON files. Each JSON file can be considered a mini-swagger spec the describes endpoints. The code collects all this endpoint definitions which it then makes into a list, with each endpoint URL and HTTP method a comma delimited line in that list. The list is then saved to the text file that is defined in code.
    li
      a(href="csvscrubber") CSV Scrubber
      #csvscrubberdesc
        p The purpose of CSV Scrubber is to apply the category to endpoint assignments defined in a comma delimited file and them output that assignment data to a JSON file the describes the assignment as a JSON object.
        p The comma delimited file is created by importing a CSV file created by lister in to a spreadsheet. Then, a human Subject Matter Expert applies none, one or more categories to each endpoint/method entry in the spreadsheet file. Each category is a column cell in an endpoint row. The spreadsheet file that results is exports as a CSV file. That exported CSV file is the source processed by CSV Srubber.
    li
      a(href="apicreate") API Create
      #apicreatedesc
        p The purpose of API Create is to create a Swagger 2.0 spec compliant JSON tree that describes the Gemini API.
        p The way the module works is that the code traverses all the directories in a Swagger directory. (For now, the Swagger directory is defined in code. Well refactor this shortcoming into a configuration file.). Each Swagger directory contains directories that contain JSON files. Each JSON file can be considered a mini-swagger spec that describes endpoints. The code collects all the endpoints and transforms each endpoint into a branch on the main Gemini JSON API spec tree. Each branch on the tree, which is an API path and subordinate properties, is Swagger 2.0 compliant and thus can be rendered on any technology that can render a Swagger 2.0 compliant API spec written in JSON.

    li
      a(href="integrator") Integrator
      #integratordesc
        p The purpose of Integrator is to assign categories as Swagger tags values to a given endpoint/method. An endpoint/method node is a Swagger JSON definition can have one or many values defined in the tags property.The tags property is of type, array.
        p In the case of H2Wellness, each value assigned to the tags array is a logical category. For example:
        p <pre>tags = ["Device", "Tile"]</pre>
        p The way Integrator works is that the code loads the Swagger JSON created by API Create into memory as a JavaScript object. Also, the the JSON file created by CSV Scrubber is loaded into memory, also as JavaScript object. The code then does a logical join between the Gemini API Json document and the document produced by CSV Scrubber, binding to the endpoint/url of each API call. The  endpoint/url of each API call exist uniquely in both files. Upon joining, the tags from the CSV Scrubber JSON are applied to the tags property in the Gemini API document.
